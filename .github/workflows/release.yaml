name: Release
on:
  release:
    types:
      - published
  push:
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  compile:
    name: Build and Publish Docker Image
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        arch: ["arm", "x86"]
    permissions:
      packages: write
    env:
      TARGET: ${{ matrix.arch == 'arm' && 'aarch64-unknown-linux-musl' || 'x86_64-unknown-linux-musl' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: ${{ env.TARGET }}
      - run: cargo install cargo
      - run: cross build --release --target=${{ env.TARGET }}
      - uses: actions/upload-artifact@v4
        with:
          name: binary-${{ matrix.arch }}
          path: target/*-linux-musl/release/image-color-service
  deploy:
    runs-on: ubuntu-latest
    needs: compile
    steps:             
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: binary-x86
          path: amd64
      - uses: actions/download-artifact@v4
        with:
          name: binary-arm64
          path: arm64
      - uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}          
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name == 'release' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
